// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render Vehicles screen correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F0F2F7",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          undefined,
          Object {
            "alignItems": "center",
            "backgroundColor": "black",
            "height": 142,
            "justifyContent": "space-around",
            "paddingTop": 30,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "borderBottomColor": "#629AFF",
            "borderBottomWidth": 4,
            "flex": 1,
            "height": 112,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Image
          style={
            Array [
              Object {
                "height": 37,
              },
              Object {
                "tintColor": "#629AFF",
              },
              undefined,
            ]
          }
        />
        <Text
          inverted={true}
          style={
            Array [
              Object {
                "fontSize": 15,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "color": "#ffffff",
              },
              Array [
                Object {
                  "fontSize": 14,
                  "marginTop": 10,
                },
                Object {
                  "color": "#629AFF",
                },
                undefined,
              ],
            ]
          }
        >
          Tram
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "height": 112,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Image
          style={
            Array [
              Object {
                "height": 37,
              },
              false,
              undefined,
            ]
          }
        />
        <Text
          inverted={true}
          style={
            Array [
              Object {
                "fontSize": 15,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "color": "#ffffff",
              },
              Array [
                Object {
                  "fontSize": 14,
                  "marginTop": 10,
                },
                false,
                undefined,
              ],
            ]
          }
        >
          Trolleybus
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "height": 112,
            "justifyContent": "center",
            "opacity": 1,
          }
        }
      >
        <Image
          style={
            Array [
              Object {
                "height": 37,
              },
              false,
              undefined,
            ]
          }
        />
        <Text
          inverted={true}
          style={
            Array [
              Object {
                "fontSize": 15,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "color": "#ffffff",
              },
              Array [
                Object {
                  "fontSize": 14,
                  "marginTop": 10,
                },
                false,
                undefined,
              ],
            ]
          }
        >
          Bus
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "height": 112,
            "justifyContent": "center",
            "opacity": 1,
            "paddingTop": 5,
          }
        }
      >
        <Image
          style={
            Array [
              Object {
                "height": 37,
              },
              false,
              undefined,
            ]
          }
        />
        <Text
          inverted={true}
          style={
            Array [
              Object {
                "fontSize": 15,
              },
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Object {
                "color": "#ffffff",
              },
              Array [
                Object {
                  "fontSize": 14,
                  "marginTop": 10,
                },
                false,
                Object {
                  "marginTop": 10,
                },
              ],
            ]
          }
        >
          Metro
        </Text>
      </View>
    </View>
    <Choose>
      <When
        condition={false}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "white",
              "flex": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "aspectRatio": 1.3333333333333333,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                undefined,
              ]
            }
          >
            <View
              autoPlay={true}
              enableMergePathsAndroidForKitKatAndAbove={false}
              loop={true}
              onAnimationFinish={[Function]}
              onLayout={[Function]}
              progress={0}
              resizeMode="contain"
              sourceJson="{\\"v\\":\\"5.4.3\\",\\"fr\\":60,\\"ip\\":0,\\"op\\":67,\\"w\\":800,\\"h\\":600,\\"nm\\":\\"dot loading 1\\",\\"ddd\\":0,\\"assets\\":[],\\"layers\\":[{\\"ddd\\":0,\\"ind\\":1,\\"ty\\":4,\\"nm\\":\\"Dots\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[400,300,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[-208,40,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"d\\":1,\\"ty\\":\\"el\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.091,0.091],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.446,0.446],\\"y\\":[0,0]},\\"n\\":[\\"0p091_1_0p446_0\\",\\"0p091_1_0p446_0\\"],\\"t\\":14,\\"s\\":[0,0],\\"e\\":[33.703,33.703]},{\\"i\\":{\\"x\\":[0.512,0.512],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.887,0.887],\\"y\\":[0,0]},\\"n\\":[\\"0p512_1_0p887_0\\",\\"0p512_1_0p887_0\\"],\\"t\\":44,\\"s\\":[33.703,33.703],\\"e\\":[0,0]},{\\"t\\":74}],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"nm\\":\\"Ellipse Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Ellipse\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[0,0,0,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"bm\\":0,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[-168,40],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Ellipse 3\\",\\"np\\":3,\\"cix\\":2,\\"bm\\":0,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"gr\\",\\"it\\":[{\\"d\\":1,\\"ty\\":\\"el\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.091,0.091],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.446,0.446],\\"y\\":[0,0]},\\"n\\":[\\"0p091_1_0p446_0\\",\\"0p091_1_0p446_0\\"],\\"t\\":8,\\"s\\":[0,0],\\"e\\":[33.703,33.703]},{\\"i\\":{\\"x\\":[0.512,0.512],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.887,0.887],\\"y\\":[0,0]},\\"n\\":[\\"0p512_1_0p887_0\\",\\"0p512_1_0p887_0\\"],\\"t\\":38,\\"s\\":[33.703,33.703],\\"e\\":[0,0]},{\\"t\\":68}],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"nm\\":\\"Ellipse Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Ellipse\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[0,0,0,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"bm\\":0,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[-208,40],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Ellipse 2\\",\\"np\\":3,\\"cix\\":2,\\"bm\\":0,\\"ix\\":2,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false},{\\"ty\\":\\"gr\\",\\"it\\":[{\\"d\\":1,\\"ty\\":\\"el\\",\\"s\\":{\\"a\\":1,\\"k\\":[{\\"i\\":{\\"x\\":[0.091,0.091],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.446,0.446],\\"y\\":[0,0]},\\"n\\":[\\"0p091_1_0p446_0\\",\\"0p091_1_0p446_0\\"],\\"t\\":2,\\"s\\":[0,0],\\"e\\":[33.703,33.703]},{\\"i\\":{\\"x\\":[0.512,0.512],\\"y\\":[1,1]},\\"o\\":{\\"x\\":[0.887,0.887],\\"y\\":[0,0]},\\"n\\":[\\"0p512_1_0p887_0\\",\\"0p512_1_0p887_0\\"],\\"t\\":32,\\"s\\":[33.703,33.703],\\"e\\":[0,0]},{\\"t\\":62}],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"nm\\":\\"Ellipse Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Ellipse\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[0,0,0,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"bm\\":0,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[-248,40],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Ellipse 1\\",\\"np\\":3,\\"cix\\":2,\\"bm\\":0,\\"ix\\":3,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":68,\\"st\\":0,\\"bm\\":0},{\\"ddd\\":0,\\"ind\\":2,\\"ty\\":4,\\"nm\\":\\"\\\\rBG\\",\\"sr\\":1,\\"ks\\":{\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":11},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":10},\\"p\\":{\\"a\\":0,\\"k\\":[400,300,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100,100],\\"ix\\":6}},\\"ao\\":0,\\"shapes\\":[{\\"ty\\":\\"gr\\",\\"it\\":[{\\"ty\\":\\"rc\\",\\"d\\":1,\\"s\\":{\\"a\\":0,\\"k\\":[800,600],\\"ix\\":2},\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"nm\\":\\"Rectangle Path 1\\",\\"mn\\":\\"ADBE Vector Shape - Rect\\",\\"hd\\":false},{\\"ty\\":\\"fl\\",\\"c\\":{\\"a\\":0,\\"k\\":[1,1,1,1],\\"ix\\":4},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":5},\\"r\\":1,\\"bm\\":0,\\"nm\\":\\"Fill 1\\",\\"mn\\":\\"ADBE Vector Graphic - Fill\\",\\"hd\\":false},{\\"ty\\":\\"tr\\",\\"p\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":2},\\"a\\":{\\"a\\":0,\\"k\\":[0,0],\\"ix\\":1},\\"s\\":{\\"a\\":0,\\"k\\":[100,100],\\"ix\\":3},\\"r\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":6},\\"o\\":{\\"a\\":0,\\"k\\":100,\\"ix\\":7},\\"sk\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":4},\\"sa\\":{\\"a\\":0,\\"k\\":0,\\"ix\\":5},\\"nm\\":\\"Transform\\"}],\\"nm\\":\\"Rectangle 1\\",\\"np\\":3,\\"cix\\":2,\\"bm\\":0,\\"ix\\":1,\\"mn\\":\\"ADBE Vector Group\\",\\"hd\\":false}],\\"ip\\":0,\\"op\\":68,\\"st\\":0,\\"bm\\":0}],\\"markers\\":[]}"
              speed={1}
              style={
                Object {
                  "aspectRatio": 1.3333333333333333,
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
          </View>
        </View>
      </When>
      <Otherwise>
        <View
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
              undefined,
              Object {
                "backgroundColor": "white",
                "elevation": 5,
                "marginBottom": 10,
                "shadowColor": "lightgrey",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.25,
                "shadowRadius": 3.84,
              },
            ]
          }
        >
          <Image
            resizeMode="contain"
            style={
              Object {
                "alignSelf": "center",
                "height": 17,
                "margin": 20,
                "width": 17,
              }
            }
            tintColor="grey"
          />
          <View
            style={
              Object {
                "flex": 1,
                "paddingHorizontal": 3,
                "paddingVertical": 10,
              }
            }
          >
            <View>
              <If
                condition=""
              >
                <Text
                  caption={true}
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "fontSize": 12,
                        },
                        Object {
                          "color": "#b3b3b3",
                        },
                      ],
                    ]
                  }
                />
              </If>
              <View
                centered={true}
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                    Object {
                      "alignItems": "center",
                    },
                    undefined,
                  ]
                }
              >
                <If>
                  <Text
                    style={
                      Array [
                        Object {
                          "fontSize": 15,
                        },
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  />
                </If>
                <TextInput
                  allowFontScaling={true}
                  hideTitle={true}
                  innerStyle={
                    Object {
                      "color": "black",
                      "flex": 1,
                      "marginTop": 10,
                      "minHeight": 20,
                      "padding": 0,
                    }
                  }
                  onBlur={[Function]}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  onRightIconPress={[Function]}
                  rejectResponderTermination={true}
                  rightIconStyle={
                    Object {
                      "tintColor": "grey",
                    }
                  }
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "minHeight": 40,
                      },
                      null,
                      Object {
                        "color": "black",
                        "flex": 1,
                        "marginTop": 10,
                        "minHeight": 20,
                        "padding": 0,
                      },
                      Object {
                        "color": "black",
                      },
                    ]
                  }
                  textContentType="creditCardNumber"
                  underlineColorAndroid="#0000"
                  value=""
                />
              </View>
              <If>
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      undefined,
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                        "opacity": 1,
                      }
                    }
                  />
                </View>
              </If>
              <If
                condition={true}
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#e5e5e5",
                      },
                      Object {
                        "height": 0.5,
                      },
                    ]
                  }
                />
              </If>
              <If>
                <Text
                  caption={true}
                  secondary={true}
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      undefined,
                      Object {
                        "color": "#B7C3CF",
                      },
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Object {
                        "marginTop": 8,
                      },
                    ]
                  }
                />
              </If>
              <If>
                <View
                  pointerEvents="box-none"
                  style={
                    Array [
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      },
                      undefined,
                      Object {
                        "alignItems": "flex-end",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "height": 30,
                        "justifyContent": "center",
                        "opacity": 1,
                        "width": 30,
                      }
                    }
                  >
                    <Image
                      style={
                        Array [
                          Object {
                            "tintColor": "grey",
                          },
                        ]
                      }
                    />
                  </View>
                </View>
              </If>
            </View>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#8CBC69",
                "borderRadius": 6,
                "height": 45,
                "justifyContent": "center",
                "marginHorizontal": 8,
                "opacity": 1,
                "width": 90,
              }
            }
          >
            <View>
              <If
                condition={false}
              />
              <If
                condition="Search"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 15,
                      },
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#619EF4",
                          "fontSize": 16,
                        },
                        Object {
                          "color": "#ffffff",
                        },
                      ],
                    ]
                  }
                >
                  Search
                </Text>
              </If>
            </View>
          </View>
        </View>
        <RCTScrollView
          ListEmptyComponent={
            <_default
              style={
                Object {
                  "flex": 1,
                  "margin": 20,
                }
              }
            >
              There are no routes to display
            </_default>
          }
          contentContainerStyle={
            Object {
              "marginHorizontal": 3,
            }
          }
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={5}
          keyExtractor={[Function]}
          maxToRenderPerBatch={1}
          numColumns={4}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View>
            <Text
              onLayout={[Function]}
              style={
                Array [
                  Object {
                    "fontSize": 15,
                  },
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Object {
                    "flex": 1,
                    "margin": 20,
                  },
                ]
              }
            >
              There are no routes to display
            </Text>
          </View>
        </RCTScrollView>
      </Otherwise>
    </Choose>
  </View>
</View>
`;
